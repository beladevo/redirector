[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "redirector-osint"
version = "2.0.1"
description = "Professional OSINT tool for URL redirection with comprehensive request logging, IP tracking, and user-agent analysis"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Redirector Contributors", email = "security@redirector-tool.com"},
]
keywords = ["osint", "ip-grabber", "user-agent-tracking", "cybersecurity", "security-tool", "request-logging", "redirector", "analytics", "threat-intelligence"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators", 
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Logging",
    "Environment :: Web Environment",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.1",
    "typer[all]>=0.12.3",
    "sqlalchemy>=2.0.32",
    "jinja2>=3.1.4",
    "pyyaml>=6.0.1",
    "rich>=13.7.1",
    "httpx>=0.27.0",
    "python-multipart>=0.0.9",
    "aiofiles>=23.2.1",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "httpx>=0.27.0",
]

[project.urls]
Homepage = "https://github.com/beladevo/redirector"
Repository = "https://github.com/beladevo/redirector.git"
Issues = "https://github.com/beladevo/redirector/issues"

[project.scripts]
redirector = "redirector.cli.main:app"

[tool.hatch.build.targets.wheel]
packages = ["src/redirector"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
exclude = [
    "venv/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=src/redirector --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/redirector"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert statements and shell injection (we use subprocess safely)

[tool.bandit.assert_used]
skips = ["*/tests/*", "*/test_*.py"]