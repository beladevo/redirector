name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  docker:
    name: Docker Build & Test (quick)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Build single-platform for speed and load it locally for tests
      - name: Build (amd64) with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: redirector:test
          load: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run container smoke test
        run: |
          docker run --rm -d --name test-redirector -p 8080:8080 -p 3000:3000 redirector:test
          for i in {1..12}; do
            if curl -fsS http://localhost:3000/health >/dev/null; then
              echo "Container is ready!"
              break
            fi
            echo "Waiting for container... ($i/12)"
            sleep 5
          done
          curl -fsS http://localhost:3000/health >/dev/null || (docker logs test-redirector && exit 1)
          docker stop test-redirector

  build-and-publish:
    name: Build & Publish (main/release)
    runs-on: ubuntu-latest
    needs: [docker]
    if: github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Build Python package (kept minimal; caches pip implicitly on runner)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Build & check package
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
          twine check dist/*

      - name: Publish to PyPI
        if: github.event_name == 'release'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name == 'release' || github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/redirector
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      # Multi-platform only on main/release (keeps PRs blazing fast)
      - name: Build and push (cached, multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
