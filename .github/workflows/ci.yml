name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    name: Quick Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and test
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: redirector:test
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Smoke test
        run: |
          docker run --rm -d --name test -p 3000:3000 -p 8080:8080 redirector:test
          sleep 10
          curl -f http://localhost:3000/health || (docker logs test && exit 1)
          docker stop test

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Build and publish PyPI
        run: |
          pip install build twine
          python -m build
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      - name: Set up Buildx  
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/redirector:latest,${{ secrets.DOCKERHUB_USERNAME }}/redirector:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
